////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : disp_num.vf
// /___/   /\     Timestamp : 01/05/2020 19:43:23
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/VerilogHDL_DL/MyMaze1/ipcore_dir -intstyle ise -family kintex7 -verilog E:/VerilogHDL_DL/MyMaze2/disp_num.vf -w E:/VerilogHDL_DL/MyMaze2/disp_num.sch
//Design Name: disp_num
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4to1_MUSER_disp_num(I0, 
                              I1, 
                              I2, 
                              I3, 
                              S, 
                              O);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] S;
   output O;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   INV  XLXI_1 (.I(S[1]), 
               .O(XLXN_5));
   INV  XLXI_2 (.I(S[0]), 
               .O(XLXN_6));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(XLXN_15));
   AND2  XLXI_4 (.I0(S[0]), 
                .I1(XLXN_5), 
                .O(XLXN_16));
   AND2  XLXI_5 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_17));
   AND2  XLXI_6 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_18));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_15), 
                .O(XLXN_24));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_16), 
                .O(XLXN_26));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_17), 
                .O(XLXN_27));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_18), 
                 .O(XLXN_28));
   OR4  XLXI_11 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_26), 
                .I3(XLXN_24), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module MUX4to1b4_MUSER_disp_num(I0, 
                                I1, 
                                I2, 
                                I3, 
                                S, 
                                O);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] S;
   output [3:0] O;
   
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   
   INV  XLXI_1 (.I(S[1]), 
               .O(XLXN_4));
   INV  XLXI_2 (.I(S[0]), 
               .O(XLXN_6));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(XLXN_4), 
                .O(XLXN_12));
   AND2  XLXI_4 (.I0(S[0]), 
                .I1(XLXN_4), 
                .O(XLXN_13));
   AND2  XLXI_5 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_14));
   AND2  XLXI_6 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_15));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_12), 
                .O(XLXN_59));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_13), 
                .O(XLXN_60));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_14), 
                .O(XLXN_61));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_15), 
                 .O(XLXN_62));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_12), 
                 .O(XLXN_63));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_64));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_65));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_15), 
                 .O(XLXN_66));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_12), 
                 .O(XLXN_67));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_68));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_69));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_15), 
                 .O(XLXN_70));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_12), 
                 .O(XLXN_71));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_73));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_74));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_15), 
                 .O(XLXN_75));
   OR4  XLXI_23 (.I0(XLXN_62), 
                .I1(XLXN_61), 
                .I2(XLXN_60), 
                .I3(XLXN_59), 
                .O(O[0]));
   OR4  XLXI_24 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(O[1]));
   OR4  XLXI_25 (.I0(XLXN_75), 
                .I1(XLXN_74), 
                .I2(XLXN_73), 
                .I3(XLXN_71), 
                .O(O[3]));
   OR4  XLXI_26 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(O[2]));
endmodule
`timescale 1ns / 1ps

module DisplaySync_MUSER_disp_num(HEXS, 
                                  LES, 
                                  point, 
                                  SCAN, 
                                  AN, 
                                  HEX, 
                                  LE, 
                                  P);

    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] SCAN;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output P;
   
   wire V0;
   wire V1;
   
   MUX4to1b4_MUSER_disp_num  XLXI_1 (.I0(HEXS[3:0]), 
                                    .I1(HEXS[7:4]), 
                                    .I2(HEXS[11:8]), 
                                    .I3(HEXS[15:12]), 
                                    .S(SCAN[1:0]), 
                                    .O(HEX[3:0]));
   MUX4to1b4_MUSER_disp_num  XLXI_2 (.I0({V1, V1, V1, V0}), 
                                    .I1({V1, V1, V0, V1}), 
                                    .I2({V1, V0, V1, V1}), 
                                    .I3({V0, V1, V1, V1}), 
                                    .S(SCAN[1:0]), 
                                    .O(AN[3:0]));
   MUX4to1_MUSER_disp_num  XLXI_3 (.I0(point[0]), 
                                  .I1(point[1]), 
                                  .I2(point[2]), 
                                  .I3(point[3]), 
                                  .S(SCAN[1:0]), 
                                  .O(P));
   MUX4to1_MUSER_disp_num  XLXI_4 (.I0(LES[0]), 
                                  .I1(LES[1]), 
                                  .I2(LES[2]), 
                                  .I3(LES[3]), 
                                  .S(SCAN[1:0]), 
                                  .O(LE));
   VCC  XLXI_5 (.P(V1));
   GND  XLXI_6 (.G(V0));
endmodule
`timescale 1ns / 1ps

module MyMc14495_MUSER_disp_num(D0, 
                                D1, 
                                D2, 
                                D3, 
                                LE, 
                                point, 
                                A, 
                                B, 
                                C, 
                                D, 
                                Dp, 
                                E, 
                                F, 
                                G);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output A;
   output B;
   output C;
   output D;
   output Dp;
   output E;
   output F;
   output G;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_46;
   wire XLXN_50;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_69;
   wire XLXN_73;
   wire XLXN_79;
   wire XLXN_83;
   
   OR4  Aa (.I0(XLXN_46), 
           .I1(XLXN_50), 
           .I2(XLXN_51), 
           .I3(XLXN_52), 
           .O(XLXN_11));
   OR4  Ab (.I0(XLXN_40), 
           .I1(XLXN_41), 
           .I2(XLXN_42), 
           .I3(XLXN_43), 
           .O(XLXN_10));
   OR3  Ac (.I0(XLXN_38), 
           .I1(XLXN_39), 
           .I2(XLXN_41), 
           .O(XLXN_9));
   OR4  Ad (.I0(XLXN_36), 
           .I1(XLXN_37), 
           .I2(XLXN_51), 
           .I3(XLXN_52), 
           .O(XLXN_8));
   OR3  Ae (.I0(XLXN_23), 
           .I1(XLXN_24), 
           .I2(XLXN_25), 
           .O(XLXN_7));
   OR4  Af (.I0(XLXN_22), 
           .I1(XLXN_19), 
           .I2(XLXN_21), 
           .I3(XLXN_50), 
           .O(XLXN_6));
   OR3  Ag (.I0(XLXN_13), 
           .I1(XLXN_12), 
           .I2(XLXN_14), 
           .O(XLXN_5));
   INV  XLXI_5 (.I(point), 
               .O(Dp));
   OR2  XLXI_15 (.I0(LE), 
                .I1(XLXN_5), 
                .O(G));
   OR2  XLXI_16 (.I0(LE), 
                .I1(XLXN_6), 
                .O(F));
   OR2  XLXI_17 (.I0(LE), 
                .I1(XLXN_7), 
                .O(E));
   OR2  XLXI_18 (.I0(LE), 
                .I1(XLXN_8), 
                .O(D));
   OR2  XLXI_19 (.I0(LE), 
                .I1(XLXN_9), 
                .O(C));
   OR2  XLXI_20 (.I0(LE), 
                .I1(XLXN_10), 
                .O(B));
   OR2  XLXI_21 (.I0(LE), 
                .I1(XLXN_11), 
                .O(A));
   AND4  XLXI_23 (.I0(XLXN_69), 
                 .I1(XLXN_73), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_13));
   AND4  XLXI_24 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(XLXN_83), 
                 .O(XLXN_12));
   AND3  XLXI_25 (.I0(XLXN_83), 
                 .I1(XLXN_73), 
                 .I2(XLXN_79), 
                 .O(XLXN_14));
   AND3  XLXI_26 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_83), 
                 .O(XLXN_22));
   AND3  XLXI_27 (.I0(XLXN_79), 
                 .I1(D1), 
                 .I2(XLXN_83), 
                 .O(XLXN_19));
   AND3  XLXI_28 (.I0(D0), 
                 .I1(XLXN_79), 
                 .I2(XLXN_83), 
                 .O(XLXN_21));
   AND3  XLXI_29 (.I0(D0), 
                 .I1(XLXN_73), 
                 .I2(XLXN_79), 
                 .O(XLXN_23));
   AND3  XLXI_30 (.I0(D2), 
                 .I1(XLXN_73), 
                 .I2(XLXN_83), 
                 .O(XLXN_24));
   AND3  XLXI_33 (.I0(D1), 
                 .I1(D2), 
                 .I2(D0), 
                 .O(XLXN_37));
   AND3  XLXI_34 (.I0(D1), 
                 .I1(D3), 
                 .I2(D2), 
                 .O(XLXN_38));
   AND3  XLXI_36 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_40));
   AND3  XLXI_37 (.I0(XLXN_69), 
                 .I1(D3), 
                 .I2(D2), 
                 .O(XLXN_41));
   AND3  XLXI_38 (.I0(XLXN_69), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_42));
   INV  XLXI_44 (.I(D1), 
                .O(XLXN_73));
   INV  XLXI_45 (.I(D2), 
                .O(XLXN_79));
   INV  XLXI_46 (.I(D3), 
                .O(XLXN_83));
   INV  XLXI_47 (.I(D0), 
                .O(XLXN_69));
   AND2  XLXI_48 (.I0(D0), 
                 .I1(XLXN_83), 
                 .O(XLXN_25));
   AND4  XLXI_49 (.I0(XLXN_69), 
                 .I1(XLXN_79), 
                 .I2(D3), 
                 .I3(D1), 
                 .O(XLXN_36));
   AND4  XLXI_50 (.I0(XLXN_83), 
                 .I1(XLXN_69), 
                 .I2(D1), 
                 .I3(XLXN_79), 
                 .O(XLXN_39));
   AND4  XLXI_51 (.I0(XLXN_73), 
                 .I1(D0), 
                 .I2(D2), 
                 .I3(XLXN_83), 
                 .O(XLXN_43));
   AND4  XLXI_52 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_79), 
                 .I3(D3), 
                 .O(XLXN_46));
   AND4  XLXI_54 (.I0(D0), 
                 .I1(D2), 
                 .I2(XLXN_73), 
                 .I3(D3), 
                 .O(XLXN_50));
   AND4  XLXI_55 (.I0(D2), 
                 .I1(XLXN_69), 
                 .I2(XLXN_73), 
                 .I3(XLXN_83), 
                 .O(XLXN_51));
   AND4  XLXI_56 (.I0(D0), 
                 .I1(XLXN_83), 
                 .I2(XLXN_79), 
                 .I3(XLXN_73), 
                 .O(XLXN_52));
endmodule
`timescale 1ns / 1ps

module disp_num(clk, 
                HEXS, 
                LES, 
                point, 
                RST, 
                AN, 
                Segment);

    input clk;
    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] point;
    input RST;
   output [3:0] AN;
   output [7:0] Segment;
   
   wire [31:0] clkd;
   wire [3:0] HEX;
   wire XLXN_13;
   wire XLXN_14;
   
   MyMc14495_MUSER_disp_num  XLXI_2 (.D0(HEX[0]), 
                                    .D1(HEX[1]), 
                                    .D2(HEX[2]), 
                                    .D3(HEX[3]), 
                                    .LE(XLXN_14), 
                                    .point(XLXN_13), 
                                    .A(Segment[0]), 
                                    .B(Segment[1]), 
                                    .C(Segment[2]), 
                                    .D(Segment[3]), 
                                    .Dp(Segment[7]), 
                                    .E(Segment[4]), 
                                    .F(Segment[5]), 
                                    .G(Segment[6]));
   DisplaySync_MUSER_disp_num  XLXI_3 (.HEXS(HEXS[15:0]), 
                                      .LES(LES[3:0]), 
                                      .point(point[3:0]), 
                                      .SCAN(clkd[18:17]), 
                                      .AN(AN[3:0]), 
                                      .HEX(HEX[3:0]), 
                                      .LE(XLXN_14), 
                                      .P(XLXN_13));
   clkdiv  XLXI_4 (.clk(clk), 
                  .rst(RST), 
                  .clkdiv(clkd[31:0]));
endmodule
