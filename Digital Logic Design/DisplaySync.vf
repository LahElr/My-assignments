////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DisplaySync.vf
// /___/   /\     Timestamp : 01/05/2020 19:43:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/VerilogHDL_DL/MyMaze1/ipcore_dir -intstyle ise -family kintex7 -verilog E:/VerilogHDL_DL/MyMaze2/DisplaySync.vf -w E:/VerilogHDL_DL/MyMaze2/DisplaySync.sch
//Design Name: DisplaySync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4to1_MUSER_DisplaySync(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 S, 
                                 O);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] S;
   output O;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   INV  XLXI_1 (.I(S[1]), 
               .O(XLXN_5));
   INV  XLXI_2 (.I(S[0]), 
               .O(XLXN_6));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(XLXN_15));
   AND2  XLXI_4 (.I0(S[0]), 
                .I1(XLXN_5), 
                .O(XLXN_16));
   AND2  XLXI_5 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_17));
   AND2  XLXI_6 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_18));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_15), 
                .O(XLXN_24));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_16), 
                .O(XLXN_26));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_17), 
                .O(XLXN_27));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_18), 
                 .O(XLXN_28));
   OR4  XLXI_11 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_26), 
                .I3(XLXN_24), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module MUX4to1b4_MUSER_DisplaySync(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   S, 
                                   O);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] S;
   output [3:0] O;
   
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   
   INV  XLXI_1 (.I(S[1]), 
               .O(XLXN_4));
   INV  XLXI_2 (.I(S[0]), 
               .O(XLXN_6));
   AND2  XLXI_3 (.I0(XLXN_6), 
                .I1(XLXN_4), 
                .O(XLXN_12));
   AND2  XLXI_4 (.I0(S[0]), 
                .I1(XLXN_4), 
                .O(XLXN_13));
   AND2  XLXI_5 (.I0(S[1]), 
                .I1(XLXN_6), 
                .O(XLXN_14));
   AND2  XLXI_6 (.I0(S[1]), 
                .I1(S[0]), 
                .O(XLXN_15));
   AND2  XLXI_7 (.I0(I0[0]), 
                .I1(XLXN_12), 
                .O(XLXN_59));
   AND2  XLXI_8 (.I0(I1[0]), 
                .I1(XLXN_13), 
                .O(XLXN_60));
   AND2  XLXI_9 (.I0(I2[0]), 
                .I1(XLXN_14), 
                .O(XLXN_61));
   AND2  XLXI_10 (.I0(I3[0]), 
                 .I1(XLXN_15), 
                 .O(XLXN_62));
   AND2  XLXI_11 (.I0(I0[1]), 
                 .I1(XLXN_12), 
                 .O(XLXN_63));
   AND2  XLXI_12 (.I0(I1[1]), 
                 .I1(XLXN_13), 
                 .O(XLXN_64));
   AND2  XLXI_13 (.I0(I2[1]), 
                 .I1(XLXN_14), 
                 .O(XLXN_65));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_15), 
                 .O(XLXN_66));
   AND2  XLXI_15 (.I0(I0[2]), 
                 .I1(XLXN_12), 
                 .O(XLXN_67));
   AND2  XLXI_16 (.I0(I1[2]), 
                 .I1(XLXN_13), 
                 .O(XLXN_68));
   AND2  XLXI_17 (.I0(I2[2]), 
                 .I1(XLXN_14), 
                 .O(XLXN_69));
   AND2  XLXI_18 (.I0(I3[2]), 
                 .I1(XLXN_15), 
                 .O(XLXN_70));
   AND2  XLXI_19 (.I0(I0[3]), 
                 .I1(XLXN_12), 
                 .O(XLXN_71));
   AND2  XLXI_20 (.I0(I1[3]), 
                 .I1(XLXN_13), 
                 .O(XLXN_73));
   AND2  XLXI_21 (.I0(I2[3]), 
                 .I1(XLXN_14), 
                 .O(XLXN_74));
   AND2  XLXI_22 (.I0(I3[3]), 
                 .I1(XLXN_15), 
                 .O(XLXN_75));
   OR4  XLXI_23 (.I0(XLXN_62), 
                .I1(XLXN_61), 
                .I2(XLXN_60), 
                .I3(XLXN_59), 
                .O(O[0]));
   OR4  XLXI_24 (.I0(XLXN_66), 
                .I1(XLXN_65), 
                .I2(XLXN_64), 
                .I3(XLXN_63), 
                .O(O[1]));
   OR4  XLXI_25 (.I0(XLXN_75), 
                .I1(XLXN_74), 
                .I2(XLXN_73), 
                .I3(XLXN_71), 
                .O(O[3]));
   OR4  XLXI_26 (.I0(XLXN_70), 
                .I1(XLXN_69), 
                .I2(XLXN_68), 
                .I3(XLXN_67), 
                .O(O[2]));
endmodule
`timescale 1ns / 1ps

module DisplaySync(HEXS, 
                   LES, 
                   point, 
                   SCAN, 
                   AN, 
                   HEX, 
                   LE, 
                   P);

    input [15:0] HEXS;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] SCAN;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output P;
   
   wire V0;
   wire V1;
   
   MUX4to1b4_MUSER_DisplaySync  XLXI_1 (.I0(HEXS[3:0]), 
                                       .I1(HEXS[7:4]), 
                                       .I2(HEXS[11:8]), 
                                       .I3(HEXS[15:12]), 
                                       .S(SCAN[1:0]), 
                                       .O(HEX[3:0]));
   MUX4to1b4_MUSER_DisplaySync  XLXI_2 (.I0({V1, V1, V1, V0}), 
                                       .I1({V1, V1, V0, V1}), 
                                       .I2({V1, V0, V1, V1}), 
                                       .I3({V0, V1, V1, V1}), 
                                       .S(SCAN[1:0]), 
                                       .O(AN[3:0]));
   MUX4to1_MUSER_DisplaySync  XLXI_3 (.I0(point[0]), 
                                     .I1(point[1]), 
                                     .I2(point[2]), 
                                     .I3(point[3]), 
                                     .S(SCAN[1:0]), 
                                     .O(P));
   MUX4to1_MUSER_DisplaySync  XLXI_4 (.I0(LES[0]), 
                                     .I1(LES[1]), 
                                     .I2(LES[2]), 
                                     .I3(LES[3]), 
                                     .S(SCAN[1:0]), 
                                     .O(LE));
   VCC  XLXI_5 (.P(V1));
   GND  XLXI_6 (.G(V0));
endmodule
